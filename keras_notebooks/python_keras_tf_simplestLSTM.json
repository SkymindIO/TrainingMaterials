{"paragraphs":[{"title":"Python imports","text":"%pyspark\n\nimport numpy\nimport tensorflow as tf\n\nfrom keras.callbacks import LambdaCallback\nfrom keras.utils import np_utils\nfrom keras.models import Sequential\nfrom keras.layers import Dense, LSTM\n\n#fix random seed for reproducibility\nseed = 7 \nnumpy.random.seed(seed)\ntf.set_random_seed(seed)","user":"admin","dateUpdated":"2018-10-04T07:55:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538638788315_-1286752459","id":"20181004-073948_1408818626","dateCreated":"2018-10-04T07:39:48+0000","dateStarted":"2018-10-04T07:55:28+0000","dateFinished":"2018-10-04T07:55:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:107"},{"title":"Python SKIL Context","text":"%pyspark\n\nimport skil\n\nskilContext = skil.SkilContext(sc)\n","user":"admin","dateUpdated":"2018-10-04T07:55:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538638788316_-1288676203","id":"20181004-073948_460107346","dateCreated":"2018-10-04T07:39:48+0000","dateStarted":"2018-10-04T07:55:28+0000","dateFinished":"2018-10-04T07:55:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:108"},{"text":"%pyspark\n\nrawstr = '*ABCDEFGHIJKLMNOPQRSTUVWXYZ'#\"*This example trains a LSTM. Look for lab steps below. Uncomment to proceed.\";\ninputstr = rawstr.lower()\n\n#to eliminate redundant character\nuniquechars = sorted(list(set(inputstr)))\n\n#create mapping for characters\n#look up table->character : index\nlut = dict((c, i) for i, c in enumerate(uniquechars))\n#reverse look up table->index : character\nrut = dict((i, c) for i, c in enumerate(uniquechars))\n\nepoch = 10\n\n","user":"admin","dateUpdated":"2018-10-04T07:55:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1538639430020_32703117","id":"20181004-075030_1608306738","dateCreated":"2018-10-04T07:50:30+0000","dateStarted":"2018-10-04T07:55:28+0000","dateFinished":"2018-10-04T07:55:28+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:109"},{"text":"%pyspark\n\n'''\nNative LSTM CallBack: One to one mapping\n'''\ndef simplestCallBack(epoch, _):\n\n    print('Epoch %d' % epoch)\n\n    prediction = ''\n    charnow = inputstr[0]\n\n    for i in range(1, len(inputstr)):\n        buffer = numpy.zeros((1, 1, len(uniquechars)), dtype = numpy.bool)\n        buffer[0, 0, lut[charnow]] = 1\n        predictClass = model.predict_classes(buffer)\n        charnow = rut[predictClass[0]]\n        prediction = prediction + charnow\n    print('Prediction:', prediction)\n\n","user":"admin","dateUpdated":"2018-10-04T07:55:28+0000","config":{"colWidth":12,"enabled":false,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1538639506446_864838367","id":"20181004-075146_1134469819","dateCreated":"2018-10-04T07:51:46+0000","status":"READY","progressUpdateIntervalMs":500,"$$hashKey":"object:110"},{"text":"%pyspark\n\n#input data dimension data samples, time steps, features)\n#output data = (data samples, features)\n\ninputdata = numpy.zeros((len(inputstr), 1, len(uniquechars)), dtype = numpy.bool)\nlabels = []\n\nprint('One to one mapping')\nfor i in range(0, len(inputstr) - 1):\n    inputdata[i, 0, lut[inputstr[i]]] = 1\n    labels.append(lut[inputstr[i + 1]])\n    print(inputstr[i], '->', inputstr[i + 1])\n    \n#next character of last one pointing to the [0]\nlabels.append(lut[inputstr[0]])\n\n#last character of input\nlastindex = len(inputstr) - 1;\ninputdata[lastindex, 0, lut[inputstr[lastindex]]] = 1\n\n#create one hot labels for classification\nonehotlabels = np_utils.to_categorical(labels)","user":"admin","dateUpdated":"2018-10-04T07:55:29+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"One to one mapping\n('*', '->', 'a')\n('a', '->', 'b')\n('b', '->', 'c')\n('c', '->', 'd')\n('d', '->', 'e')\n('e', '->', 'f')\n('f', '->', 'g')\n('g', '->', 'h')\n('h', '->', 'i')\n('i', '->', 'j')\n('j', '->', 'k')\n('k', '->', 'l')\n('l', '->', 'm')\n('m', '->', 'n')\n('n', '->', 'o')\n('o', '->', 'p')\n('p', '->', 'q')\n('q', '->', 'r')\n('r', '->', 's')\n('s', '->', 't')\n('t', '->', 'u')\n('u', '->', 'v')\n('v', '->', 'w')\n('w', '->', 'x')\n('x', '->', 'y')\n('y', '->', 'z')\n"}]},"apps":[],"jobName":"paragraph_1538639674952_-155304990","id":"20181004-075434_363013372","dateCreated":"2018-10-04T07:54:34+0000","dateStarted":"2018-10-04T07:55:29+0000","dateFinished":"2018-10-04T07:55:29+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:111"},{"text":"%pyspark\n\n#input shape for first layer is (timesteps, features)\n#output in this case is number of unique characters\nmodel = Sequential()\nmodel.add(LSTM(units = 300, input_shape = (inputdata.shape[1], inputdata.shape[2])))\nmodel.add(Dense(units = onehotlabels.shape[1], activation = 'softmax'))\nmodel.compile(optimizer = 'rmsprop', loss = 'categorical_crossentropy', metrics = ['accuracy'])\n\ncallback = LambdaCallback( on_epoch_end = simplestCallBack)\nmodel.fit(inputdata, onehotlabels, epochs = epoch, verbose = 2, callbacks = [callback])\n    ","user":"admin","dateUpdated":"2018-10-04T07:55:29+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"Epoch 1/10\n - 1s - loss: 3.2945 - acc: 0.0741\nEpoch 0\n('Prediction:', 'ababababababababababababab')\nEpoch 2/10\n - 0s - loss: 3.2701 - acc: 0.5926\nEpoch 1\n('Prediction:', 'abcdefghijklmno*abcdefghij')\nEpoch 3/10\n - 0s - loss: 3.2522 - acc: 0.8519\nEpoch 2\n('Prediction:', 'abcdefghijklmno*abcdefghij')\nEpoch 4/10\n - 0s - loss: 3.2370 - acc: 0.8889\nEpoch 3\n('Prediction:', 'abcdefghijklmnopqrstuvwxyz')\nEpoch 5/10\n - 0s - loss: 3.2233 - acc: 1.0000\nEpoch 4\n('Prediction:', 'abcdefghijklmnopqrstuvwxyz')\nEpoch 6/10\n - 0s - loss: 3.2104 - acc: 1.0000\nEpoch 5\n('Prediction:', 'abcdefghijklmnopqrstuvwxyz')\nEpoch 7/10\n - 0s - loss: 3.1982 - acc: 1.0000\nEpoch 6\n('Prediction:', 'abcdefghijklmnopqrstuvwxyz')\nEpoch 8/10\n - 0s - loss: 3.1863 - acc: 1.0000\nEpoch 7\n('Prediction:', 'abcdefghijklmnopqrstuvwxyz')\nEpoch 9/10\n - 0s - loss: 3.1747 - acc: 1.0000\nEpoch 8\n('Prediction:', 'abcdefghijklmnopqrstuvwxyz')\nEpoch 10/10\n - 0s - loss: 3.1634 - acc: 1.0000\nEpoch 9\n('Prediction:', 'abcdefghijklmnopqrstuvwxyz')\n<keras.callbacks.History object at 0x7fc374729050>\n"}]},"apps":[],"jobName":"paragraph_1538639618926_801688118","id":"20181004-075338_1305822863","dateCreated":"2018-10-04T07:53:38+0000","dateStarted":"2018-10-04T07:55:29+0000","dateFinished":"2018-10-04T07:55:32+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:112"},{"title":"Python model saving.","text":"%pyspark\n\n\nmodel_id = skilContext.addModelToExperiment(z, model, \"SimplestLSTM\")\nskilContext.addEvaluationToModel(z, model_id, model, inputdata, onehotlabels, \"Keras mlp \" + str(epochs) + \" epochs\")\n","user":"admin","dateUpdated":"2018-10-04T07:55:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"u'0262dc9e-a44d-46e3-8b4b-cae539b729a2'\n"}]},"apps":[],"jobName":"paragraph_1538638788317_-1289060952","id":"20181004-073948_224265690","dateCreated":"2018-10-04T07:39:48+0000","dateStarted":"2018-10-04T07:55:29+0000","dateFinished":"2018-10-04T07:55:34+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:113"},{"text":"%pyspark\n","user":"admin","dateUpdated":"2018-10-04T07:55:28+0000","config":{"colWidth":12,"enabled":true,"results":{},"editorSetting":{"language":"python"},"editorMode":"ace/mode/python"},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1538638788317_-1289060952","id":"20181004-073948_408805246","dateCreated":"2018-10-04T07:39:48+0000","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:114"}],"name":"/SimplestLSTM","id":"2DUBGG4VK","angularObjects":{"2DTP2JXUS:existing_process":[],"2DUPJHYBA:existing_process":[],"2DSC1ECKJ:existing_process":[],"2DU54HT6Q:existing_process":[],"2DQXPW21D:existing_process":[],"2DTJFP6WC:existing_process":[],"2DTCCZ9KY:existing_process":[],"2DSTVCV4W:existing_process":[],"2DSSMX5HZ:existing_process":[]},"config":{"looknfeel":"default","personalizedMode":"false"},"info":{}}