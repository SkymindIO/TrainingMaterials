# Using the SKIL Model Server


In this lab you will
1. Start the SKIL Model Server 
2. Review the Contents of the Model
3. Verify the Model is Running
4. Send Data to the Model to retrieve a Prediction


## Goals of the Lab

* Introduction to the SKIL Model Server
* Introduction to Notebook Based Models
* Accessing a Deployed Model



# Step 1 : Start the SKIl Model Server

The SKIL model server runs as a daemon process. In this case SKIL was installed using RPM packages and added as a daemon process managed by systemctl. 

The following commands can be used to manage the skil process. 

```sudo systemctl status skil```
Will show if skil is running. 

If skil is not running you will see. 

```
● skil.service - Skymind SKIL Service
   Loaded: loaded (/etc/systemd/system/skil.service; enabled; vendor preset: disabled)
   Active: inactive (dead) since Wed 2018-03-14 05:47:51 UTC; 2s ago
```

If skil is running you will see. 

```
● skil.service - Skymind SKIL Service
   Loaded: loaded (/etc/systemd/system/skil.service; enabled; vendor preset: disabled)
   Active: active (running) since Wed 2018-03-14 05:50:55 UTC; 1s ago
```


```sudo systemctl start skil```

Will start skil, if skil is running already it will have no effect

```sudo systemctl stop skil```

Will stop skil, if skil is not running it will have no effect. 

## Start the SKIL daemon if needed by running the systemctl start skil command




# Step 2: Use the SKIL web interface to navigate to our notebook

Connect to SKIL by launching Firefox inside your virtual machine and connection to http://localhost:9008


Use the username admin, with the password admin when asked to login. 

![alt text](../resources/SKIL_Login.png)

Using the Left Nav Panel

![alt text](../resources/SKIL_LeftNav.png)

Select Workspaces, and view the available workspaces, 

Select the workspace "tuesdaymarch6".

![alt text](../resources/SKIL_Workspaces.png)


# Step 3: Viewing the Notebook

The Experiment Physionet contains scala code to build and train a neural network to predict patient mortality based on the data gathered from the first 48 hours of hospitilization in an  Intensive Care Unit.

Open up the Physionet Notebook.The notebook is also call "ClinicalTimeSeriesLSTMExample" 

Note you will have to login to Zeppelin. Use the username of "admin" with a password of "admin".

**Note**
The notebook has already ran and the model has been saved. Just view the notebook there is no need to run the notebook. 



# STEP 4: Viewing the Deployment

When a model runs to completion in SKIL, the following code is used to save the trained model. 

![alt text](../resources/SKIL_SkilContext.png)

Saved models can be viewed by clicking on the "models" tab.

![alt text](../resources/SKIL_ModelsTab.png)

# Step 5: Viewing the Deployment Endpoint Details

The Saved models are deployed and wrapped in a REST interface. REST just means an interface that uses http protocols. When you enter a user name and password on a web form to login to a web application you are using a REST interface. Your username and password are POSTED to the webserver using a POST Request and a page is returned using a GET requested. 

Model serving is similar, Data is sent to the model using http POST, and results are returned using HTTP GET. 

The complexities of a REST interface are handled by some prebuilt java code. 

Select "Deployments" in the left Panel. 

View the deployment "test".

You will see that the model "20-epochs-first" is deployed and started.

![alt text](../resources/SKIL_deployment.png)

You will also see the endpoint has the url 

``` http://host:9008/endpoints/test/model/20epochsfirst/default/  ```


By POSTING our input data to that url we will get the output of the model. In this case by posting the sequence of data from the hospital stay we will get a prediction of of patient survival. 



# Step 6: Making a Prediction

In order to make a prediction our application needs to read the source data, transform it in an identical manner as the transformation used when the model was trained, and then feed the data into the nerual network and gather the output. 

Change to the directory with the precompiled client jar. 

``` cd /home/skymind/java/SKIL_Examples/skil_clinical_lstm_app/client_app/target```

Run the following command to make a prediction for patient 5. 

```
java -jar skil-example-clinical-lstm-1.0.0.jar --feature /home/skymind/physionet_2012/sequence/5.csv  --label /home/skymind/physionet_2012/mortality/5.csv --endpoint http://localhost:9008/endpoints/test/model/20epochsfirst/default/
```

There will be lots of logging notifications output, the info we want is in the final line. 

```classification return: {"minibatchId":"149494d9-3322-43be-bd6a-c7820302b161","results":[0],"probabilities":[0.8707182]}```

In this case the patient has %87 prediction of survival. 




# Congratulations you have used a SKIL Deployment to make a prediction !!!
